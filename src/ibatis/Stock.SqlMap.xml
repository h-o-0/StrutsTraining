<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
          PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
          "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Stock">
    <!-- SELECT -->

	<!-- resultMapを記述してIBATISの機能でマッピングする方法DBに依存しない記述のテスト -->
	<!-- 親IDを指定し、そのタイトルの全データを取得します -->
    <resultMap id="stockmap" class="ibatis.dto.Stock">
    	<result column="ID" property="id"/>
    	<result column="PARENT_ID" property="parent_id"/>
	    <result column="TITLE" property="title"/>
	    <result column="VOLUME" property="volume"/>
	    <result column="STATUS" property="status"/>
	    <result column="LOAN_COMMENT" property="loan_comment"/>
	</resultMap>

	<select id="getStockDataEachTitle" parameterClass="int"  resultMap="stockmap">
    	SELECT * FROM pelibrary.stock WHERE parent_id = #VALUE#
	</select>

    <!-- UPDATE -->

    <!-- IDを指定し、貸出可能状態に変更します -->
    <update id="updateStatusLendable" parameterClass="ibatis.dto.Stock">
        UPDATE pelibrary.stock
        SET STATUS = 1 , LOAN_COMMENT = NULL
        WHERE ID = #id#
    </update>

	 <!-- IDを指定し、貸出中状態に変更します -->
    <update id="updateStatusOnLoan" parameterClass="ibatis.dto.Stock">
        UPDATE pelibrary.stock
        SET STATUS = 0, LOAN_COMMENT = #loan_comment#
       WHERE ID = #id#
    </update>

	<!-- 親IDを指定し、タイトルを変更します -->
    <update id="updateTitle" parameterClass="ibatis.dto.Stock">
        UPDATE pelibrary.stock
        SET TITLE = #title#
        WHERE parent_id = #parent_id#
    </update>

    <!-- DELETE -->
    <!-- IDを指定し、物理削除します -->
    <delete id="deleteStock" parameterClass="ibatis.dto.Stock">
        DELETE
        FROM pelibrary.stock
        WHERE ID = #id#
    </delete>

     <!-- 親IDを指定し、物理削除します -->
    <delete id="parentDeleteStock" parameterClass="int">
        DELETE
        FROM pelibrary.stock
        WHERE parent_id = #VALUE#
    </delete>

    <!-- INSERT -->
    <insert id="insertStock" parameterClass="ibatis.dto.Stock">
        INSERT INTO pelibrary.stock (
        	PARENT_ID,
            TITLE,
            VOLUME,
            STATUS
        ) VALUES (
        	#parent_id#,
            #title#,
            #volume#,
            1
        )
    </insert>
</sqlMap>